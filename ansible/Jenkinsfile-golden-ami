#!groovy

node('master') {

    try {

        stage('Clean workspace before build') {
            deleteDir()
        }

        wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'jenkins-packer', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
        stage('Code checkout') {
            checkout([$class: 'GitSCM',
            branches: scm.branches,
            doGenerateSubmoduleConfigurations: false,
            extensions: [],
            gitTool: 'Default',
            submoduleCfg: [],
            userRemoteConfigs: [[credentialsId: 'jenkins-github',
            url: 'https://github.com/maddy-imp/image-management.git']]]
            )
        }

        stage('Bake AMI') {
            dir('projects/golden_ami/ansible') {
            sh '''
            pwd
            cd ../packer
            packer validate packer.json
            packer build packer.json
            '''
            }
        }

        stage("Create .properties") {
            sh '''
            cd projects/golden_ami/packer
            echo -n "artifact_id=" >> bake-golden-ami.properties
            cat packer-manifest.json | grep -o 'ami-[0-9a-z]*' | tail -1 >>  bake-golden-ami.properties
            cat bake-golden-ami.properties
            '''
            archive includes: 'projects/golden_ami/packer/bake-golden-ami.properties'
        }

    }
    }
    } catch (e) {
        currentBuild.result = "FAILURE"
        throw e

    } finally {
        result = currentBuild.result ?: "SUCCESS"
        previousResult = currentBuild.previousBuild?.result
    }
}
